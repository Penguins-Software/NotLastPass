{"version":3,"sources":["services/auth.service.js","components/login.component.js","components/register.component.js","components/profile.component.js","http-common.js","services/password.service.js","components/add-password.component.js","components/password.component.js","components/passwords-list.component.js","components/upload-password.component.js","App.js","reportWebVitals.js","index.js"],"names":["API_URL","username","password","axios","post","then","response","data","accessToken","localStorage","setItem","JSON","stringify","removeItem","email","parse","getItem","required","value","className","role","Login","props","handleLogin","bind","onChangeUsername","onChangePassword","state","loading","message","e","this","setState","target","preventDefault","form","validateAll","checkBtn","context","_errors","length","AuthService","login","history","push","window","location","reload","error","resMessage","toString","src","alt","onSubmit","ref","c","htmlFor","type","name","onChange","validations","disabled","style","display","Component","isEmail","vusername","vpassword","Register","handleRegister","onChangeEmail","successful","register","Profile","redirect","userReady","currentUser","getCurrentUser","to","substring","substr","id","roles","map","index","user","create","baseURL","headers","http","get","put","delete","website","AddPassword","onChangeWebsite","savePassword","newPassword","submitted","PasswordDataService","catch","console","log","onClick","Password","getPassword","updatePassword","deletePassword","currentPassword","match","params","prevState","update","PasswordsList","onChangeSearchWebsite","retrievePasswords","refreshList","setActivePassword","removeAllPasswords","searchWebsite","theMeaningOfLive","passwords","currentIndex","getAll","deleteAll","findByWebsite","placeholder","UploadPassword","onChangeFile","importCSV","newUpload","updateData","file","uploaded","fileToUpload","files","Papa","complete","header","results","forEach","element","tempPassword","url","accept","App","logOut","showModeratorBoard","showAdminBoard","undefined","logout","href","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"0NAEMA,EAAU,kCAmCD,M,qFAhCb,SAAMC,EAAUC,GACd,OAAOC,IACJC,KAAKJ,EAAU,QAAS,CACvBC,WACAC,aAEDG,MAAK,SAAAC,GAKJ,OAJIA,EAASC,KAAKC,aAChBC,aAAaC,QAAQ,OAAQC,KAAKC,UAAUN,EAASC,OAGhDD,EAASC,U,oBAItB,WACEE,aAAaI,WAAW,U,sBAG1B,SAASZ,EAAUa,EAAOZ,GACxB,OAAOC,IAAMC,KAAKJ,EAAU,WAAY,CACtCC,WACAa,QACAZ,e,4BAIJ,WACE,OAAOS,KAAKI,MAAMN,aAAaO,QAAQ,a,gEC1BrCC,EAAW,SAAAC,GACf,IAAKA,EACH,OACE,qBAAKC,UAAU,qBAAqBC,KAAK,QAAzC,sCAOeC,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,iBAAmB,EAAKA,iBAAiBD,KAAtB,gBACxB,EAAKE,iBAAmB,EAAKA,iBAAiBF,KAAtB,gBAExB,EAAKG,MAAQ,CACX1B,SAAU,GACVC,SAAU,GACV0B,SAAS,EACTC,QAAS,IAVM,E,oDAcnB,SAAiBC,GACfC,KAAKC,SAAS,CACZ/B,SAAU6B,EAAEG,OAAOf,U,8BAIvB,SAAiBY,GACfC,KAAKC,SAAS,CACZ9B,SAAU4B,EAAEG,OAAOf,U,yBAIvB,SAAYY,GAAI,IAAD,OACbA,EAAEI,iBAEFH,KAAKC,SAAS,CACZH,QAAS,GACTD,SAAS,IAGXG,KAAKI,KAAKC,cAEmC,IAAzCL,KAAKM,SAASC,QAAQC,QAAQC,OAChCC,EAAYC,MAAMX,KAAKJ,MAAM1B,SAAU8B,KAAKJ,MAAMzB,UAAUG,MAC1D,WACE,EAAKiB,MAAMqB,QAAQC,KAAK,cACxBC,OAAOC,SAASC,YAElB,SAAAC,GACE,IAAMC,EACHD,EAAM1C,UACL0C,EAAM1C,SAASC,MACfyC,EAAM1C,SAASC,KAAKsB,SACtBmB,EAAMnB,SACNmB,EAAME,WAER,EAAKlB,SAAS,CACZJ,SAAS,EACTC,QAASoB,OAKflB,KAAKC,SAAS,CACZJ,SAAS,M,oBAKf,WAAU,IAAD,OACP,OACE,qBAAKT,UAAU,YAAf,SACE,sBAAKA,UAAU,sBAAf,UACE,qBACEgC,IAAI,8CACJC,IAAI,cACJjC,UAAU,qBAGZ,eAAC,IAAD,CACEkC,SAAUtB,KAAKR,YACf+B,IAAK,SAAAC,GACH,EAAKpB,KAAOoB,GAHhB,UAME,sBAAKpC,UAAU,aAAf,UACE,uBAAOqC,QAAQ,WAAf,sBACA,cAAC,IAAD,CACEC,KAAK,OACLtC,UAAU,eACVuC,KAAK,WACLxC,MAAOa,KAAKJ,MAAM1B,SAClB0D,SAAU5B,KAAKN,iBACfmC,YAAa,CAAC3C,QAIlB,sBAAKE,UAAU,aAAf,UACE,uBAAOqC,QAAQ,WAAf,sBACA,cAAC,IAAD,CACEC,KAAK,WACLtC,UAAU,eACVuC,KAAK,WACLxC,MAAOa,KAAKJ,MAAMzB,SAClByD,SAAU5B,KAAKL,iBACfkC,YAAa,CAAC3C,QAIlB,qBAAKE,UAAU,aAAf,SACE,yBACEA,UAAU,4BACV0C,SAAU9B,KAAKJ,MAAMC,QAFvB,UAIGG,KAAKJ,MAAMC,SACV,sBAAMT,UAAU,qCAElB,8CAIHY,KAAKJ,MAAME,SACV,qBAAKV,UAAU,aAAf,SACE,qBAAKA,UAAU,qBAAqBC,KAAK,QAAzC,SACGW,KAAKJ,MAAME,YAIlB,cAAC,IAAD,CACEiC,MAAO,CAAEC,QAAS,QAClBT,IAAK,SAAAC,GACH,EAAKlB,SAAWkB,iB,GA9HGS,a,QCT7B/C,EAAW,SAAAC,GACf,IAAKA,EACH,OACE,qBAAKC,UAAU,qBAAqBC,KAAK,QAAzC,sCAOAN,EAAQ,SAAAI,GACZ,IAAK+C,kBAAQ/C,GACX,OACE,qBAAKC,UAAU,qBAAqBC,KAAK,QAAzC,yCAOA8C,EAAY,SAAAhD,GAChB,GAAIA,EAAMsB,OAAS,GAAKtB,EAAMsB,OAAS,GACrC,OACE,qBAAKrB,UAAU,qBAAqBC,KAAK,QAAzC,gEAOA+C,EAAY,SAAAjD,GAChB,GAAIA,EAAMsB,OAAS,GAAKtB,EAAMsB,OAAS,GACrC,OACE,qBAAKrB,UAAU,qBAAqBC,KAAK,QAAzC,gEAOegD,E,kDACnB,WAAY9C,GAAQ,IAAD,8BACjB,cAAMA,IACD+C,eAAiB,EAAKA,eAAe7C,KAApB,gBACtB,EAAKC,iBAAmB,EAAKA,iBAAiBD,KAAtB,gBACxB,EAAK8C,cAAgB,EAAKA,cAAc9C,KAAnB,gBACrB,EAAKE,iBAAmB,EAAKA,iBAAiBF,KAAtB,gBAExB,EAAKG,MAAQ,CACX1B,SAAU,GACVa,MAAO,GACPZ,SAAU,GACVqE,YAAY,EACZ1C,QAAS,IAZM,E,oDAgBnB,SAAiBC,GACfC,KAAKC,SAAS,CACZ/B,SAAU6B,EAAEG,OAAOf,U,2BAIvB,SAAcY,GACZC,KAAKC,SAAS,CACZlB,MAAOgB,EAAEG,OAAOf,U,8BAIpB,SAAiBY,GACfC,KAAKC,SAAS,CACZ9B,SAAU4B,EAAEG,OAAOf,U,4BAIvB,SAAeY,GAAI,IAAD,OAChBA,EAAEI,iBAEFH,KAAKC,SAAS,CACZH,QAAS,GACT0C,YAAY,IAGdxC,KAAKI,KAAKC,cAEmC,IAAzCL,KAAKM,SAASC,QAAQC,QAAQC,QAChCC,EAAY+B,SACVzC,KAAKJ,MAAM1B,SACX8B,KAAKJ,MAAMb,MACXiB,KAAKJ,MAAMzB,UACXG,MACA,SAAAC,GACE,EAAK0B,SAAS,CACZH,QAASvB,EAASC,KAAKsB,QACvB0C,YAAY,OAGhB,SAAAvB,GACE,IAAMC,EACHD,EAAM1C,UACL0C,EAAM1C,SAASC,MACfyC,EAAM1C,SAASC,KAAKsB,SACtBmB,EAAMnB,SACNmB,EAAME,WAER,EAAKlB,SAAS,CACZuC,YAAY,EACZ1C,QAASoB,S,oBAOnB,WAAU,IAAD,OACP,OACE,qBAAK9B,UAAU,YAAf,SACE,sBAAKA,UAAU,sBAAf,UACE,qBACEgC,IAAI,8CACJC,IAAI,cACJjC,UAAU,qBAGZ,eAAC,IAAD,CACEkC,SAAUtB,KAAKsC,eACff,IAAK,SAAAC,GACH,EAAKpB,KAAOoB,GAHhB,WAMIxB,KAAKJ,MAAM4C,YACX,gCACE,sBAAKpD,UAAU,aAAf,UACE,uBAAOqC,QAAQ,WAAf,sBACA,cAAC,IAAD,CACEC,KAAK,OACLtC,UAAU,eACVuC,KAAK,WACLxC,MAAOa,KAAKJ,MAAM1B,SAClB0D,SAAU5B,KAAKN,iBACfmC,YAAa,CAAC3C,EAAUiD,QAI5B,sBAAK/C,UAAU,aAAf,UACE,uBAAOqC,QAAQ,QAAf,mBACA,cAAC,IAAD,CACEC,KAAK,OACLtC,UAAU,eACVuC,KAAK,QACLxC,MAAOa,KAAKJ,MAAMb,MAClB6C,SAAU5B,KAAKuC,cACfV,YAAa,CAAC3C,EAAUH,QAI5B,sBAAKK,UAAU,aAAf,UACE,uBAAOqC,QAAQ,WAAf,sBACA,cAAC,IAAD,CACEC,KAAK,WACLtC,UAAU,eACVuC,KAAK,WACLxC,MAAOa,KAAKJ,MAAMzB,SAClByD,SAAU5B,KAAKL,iBACfkC,YAAa,CAAC3C,EAAUkD,QAI5B,qBAAKhD,UAAU,aAAf,SACE,wBAAQA,UAAU,4BAAlB,0BAKLY,KAAKJ,MAAME,SACV,qBAAKV,UAAU,aAAf,SACE,qBACEA,UACEY,KAAKJ,MAAM4C,WACP,sBACA,qBAENnD,KAAK,QANP,SAQGW,KAAKJ,MAAME,YAIlB,cAAC,IAAD,CACEiC,MAAO,CAAEC,QAAS,QAClBT,IAAK,SAAAC,GACH,EAAKlB,SAAWkB,iB,GAvJMS,aC5CjBS,E,kDACnB,WAAYnD,GAAQ,IAAD,8BACjB,cAAMA,IAEDK,MAAQ,CACX+C,SAAU,KACVC,WAAW,EACXC,YAAa,CAAE3E,SAAU,KANV,E,qDAUnB,WACE,IAAM2E,EAAcnC,EAAYoC,iBAE3BD,GAAa7C,KAAKC,SAAS,CAAE0C,SAAU,UAC5C3C,KAAKC,SAAS,CAAE4C,YAAaA,EAAaD,WAAW,M,oBAGvD,WACE,GAAI5C,KAAKJ,MAAM+C,SACb,OAAO,cAAC,IAAD,CAAUI,GAAI/C,KAAKJ,MAAM+C,WAGlC,IAAQE,EAAgB7C,KAAKJ,MAArBiD,YAER,OACE,qBAAKzD,UAAU,YAAf,SACIY,KAAKJ,MAAMgD,UACb,gCACA,wBAAQxD,UAAU,YAAlB,SACE,+BACE,iCAASyD,EAAY3E,WADvB,gBAIF,8BACE,4CAAwB,IACvB2E,EAAYpE,YAAYuE,UAAU,EAAG,IAFxC,OAEiD,IAC9CH,EAAYpE,YAAYwE,OAAOJ,EAAYpE,YAAYgC,OAAS,OAEnE,8BACE,yCAAqB,IACpBoC,EAAYK,MAEf,8BACE,4CAAwB,IACvBL,EAAY9D,SAEf,kDACA,6BACG8D,EAAYM,OACXN,EAAYM,MAAMC,KAAI,SAAC/D,EAAMgE,GAAP,OAAiB,6BAAiBhE,GAARgE,WAE9C,W,GApDuBpB,aCD/BqB,EAAO5C,EAAYoC,iBAGV1E,MAAMmF,OACnB,CACAC,QAAS,4BACTC,QAAS,CACP,eAAgB,mBAChB,wBAAkBH,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAM7E,YACxB,gBAAY6E,QAAZ,IAAYA,OAAZ,EAAYA,EAAMpF,YCwBP,M,sFAjCb,WACE,OAAOwF,EAAKC,IAAI,gB,iBAGlB,SAAIT,GACF,OAAOQ,EAAKC,IAAL,qBAAuBT,M,oBAGhC,SAAO1E,GACL,OAAOkF,EAAKrF,KAAK,aAAcG,K,oBAGjC,SAAO0E,EAAI1E,GACT,OAAOkF,EAAKE,IAAL,qBAAuBV,GAAM1E,K,oBAGtC,SAAO0E,GACL,OAAOQ,EAAKG,OAAL,qBAA0BX,M,uBAGnC,WACE,OAAOQ,EAAKG,OAAL,gB,2BAGT,SAAcC,GACZ,OAAOJ,EAAKC,IAAL,6BAA+BG,M,4BAGxC,SAAe5F,GACb,OAAOwF,EAAKC,IAAL,8BAAgCzF,Q,MC5BtB6F,E,kDACnB,WAAYxE,GAAQ,IAAD,8BACjB,cAAMA,IACDyE,gBAAkB,EAAKA,gBAAgBvE,KAArB,gBACvB,EAAKC,iBAAmB,EAAKA,iBAAiBD,KAAtB,gBACxB,EAAKE,iBAAmB,EAAKA,iBAAiBF,KAAtB,gBAExB,EAAKwE,aAAe,EAAKA,aAAaxE,KAAlB,gBACpB,EAAKyE,YAAc,EAAKA,YAAYzE,KAAjB,gBAEnB,EAAKG,MAAQ,CACXsD,GAAI,KACJY,QAAS,GACT5F,SAAU,GACVC,SAAU,GACVgG,WAAW,GAdI,E,mDAkBnB,SAAgBpE,GACdC,KAAKC,SAAS,CACZ6D,QAAS/D,EAAEG,OAAOf,U,8BAItB,SAAiBY,GACfC,KAAKC,SAAS,CACZ/B,SAAU6B,EAAEG,OAAOf,U,8BAIvB,SAAiBY,GACfC,KAAKC,SAAS,CACZ9B,SAAU4B,EAAEG,OAAOf,U,0BAIvB,WACE,IAAIX,EAAO,CACTsF,QAAS9D,KAAKJ,MAAMkE,QACpB5F,SAAU8B,KAAKJ,MAAM1B,SACrBC,SAAU6B,KAAKJ,MAAMzB,UAGvBiG,EAAoBb,OAAO3E,KAAKC,UAAUL,IAAOF,KAC/C0B,KAAKC,SAAS,CACZkE,WAAW,KACTE,OAAM,SAAAtE,GACVuE,QAAQC,IAAIxE,Q,yBAKhB,WACEC,KAAKC,SAAS,CACZiD,GAAI,KACJY,QAAS,GACT5F,SAAU,GACVC,SAAU,GAEVgG,WAAW,M,oBAIf,WACE,OACE,qBAAK/E,UAAU,cAAf,SACGY,KAAKJ,MAAMuE,UACV,gCACE,6DACA,wBAAQ/E,UAAU,kBAAkBoF,QAASxE,KAAKkE,YAAlD,oBAKF,gCACE,sBAAK9E,UAAU,aAAf,UACE,uBAAOqC,QAAQ,UAAf,qBACA,uBACEC,KAAK,OACLtC,UAAU,eACV8D,GAAG,UACHhE,UAAQ,EACRC,MAAOa,KAAKJ,MAAMkE,QAClBlC,SAAU5B,KAAKgE,gBACfrC,KAAK,eAIT,sBAAKvC,UAAU,aAAf,UACE,uBAAOqC,QAAQ,WAAf,sBACA,uBACEC,KAAK,OACLtC,UAAU,eACV8D,GAAG,WACHhE,UAAQ,EACRC,MAAOa,KAAKJ,MAAM1B,SAClB0D,SAAU5B,KAAKN,iBACfiC,KAAK,gBAIT,sBAAKvC,UAAU,aAAf,UACE,uBAAOqC,QAAQ,WAAf,sBACA,uBACEC,KAAK,OACLtC,UAAU,eACV8D,GAAG,WACHhE,UAAQ,EACRC,MAAOa,KAAKJ,MAAMzB,SAClByD,SAAU5B,KAAKL,iBACfgC,KAAK,gBAIT,wBAAQ6C,QAASxE,KAAKiE,aAAc7E,UAAU,kBAA9C,6B,GAnH6B6C,a,QCDpBwC,E,kDACnB,WAAYlF,GAAQ,IAAD,8BACjB,cAAMA,IACDyE,gBAAkB,EAAKA,gBAAgBvE,KAArB,gBACvB,EAAKC,iBAAmB,EAAKA,iBAAiBD,KAAtB,gBACxB,EAAKE,iBAAmB,EAAKA,iBAAiBF,KAAtB,gBAExB,EAAKiF,YAAc,EAAKA,YAAYjF,KAAjB,gBAEnB,EAAKkF,eAAiB,EAAKA,eAAelF,KAApB,gBACtB,EAAKmF,eAAiB,EAAKA,eAAenF,KAApB,gBAEtB,EAAKG,MAAQ,CACXiF,gBAAiB,CACf3B,GAAI,KACJY,QAAS,GACT5F,SAAU,GACVC,SAAU,IAEZ2B,QAAS,IAlBM,E,qDAsBnB,WACEE,KAAK0E,YAAY1E,KAAKT,MAAMuF,MAAMC,OAAO7B,M,6BAG3C,SAAgBnD,GACd,IAAM+D,EAAU/D,EAAEG,OAAOf,MAEzBa,KAAKC,UAAS,SAAS+E,GACrB,MAAO,CACLH,gBAAgB,2BACXG,EAAUH,iBADA,IAEbf,QAASA,U,8BAMjB,SAAiB/D,GACf,IAAM7B,EAAW6B,EAAEG,OAAOf,MAE1Ba,KAAKC,UAAS,SAAA+E,GAAS,MAAK,CAC1BH,gBAAgB,2BACXG,EAAUH,iBADA,IAEb3G,SAAUA,U,8BAKhB,SAAiB6B,GACf,IAAM5B,EAAW4B,EAAEG,OAAOf,MAE1Ba,KAAKC,UAAS,SAAA+E,GAAS,MAAK,CAC1BH,gBAAgB,2BACXG,EAAUH,iBADA,IAEb1G,SAAUA,U,yBAMhB,SAAY+E,GAAK,IAAD,OACdkB,EAAoBT,IAAIT,GACrB5E,MAAK,SAAAC,GACJ,EAAK0B,SAAS,CACZ4E,gBAAiBtG,EAASC,OAE5B8F,QAAQC,IAAIhG,EAASC,SAEtB6F,OAAM,SAAAtE,GACLuE,QAAQC,IAAIxE,Q,4BAIlB,WAAkB,IAAD,OACfqE,EAAoBa,OAClBjF,KAAKJ,MAAMiF,gBAAgB3B,GAC3BlD,KAAKJ,MAAMiF,iBAEVvG,MAAK,SAAAC,GACJ+F,QAAQC,IAAIhG,EAASC,MACrB,EAAKyB,SAAS,CACZH,QAAS,8CAGZuE,OAAM,SAAAtE,GACLuE,QAAQC,IAAIxE,Q,4BAIlB,WAAkB,IAAD,OACfqE,EAAoBP,OAAO7D,KAAKJ,MAAMiF,gBAAgB3B,IACnD5E,MAAK,SAAAC,GACJ+F,QAAQC,IAAIhG,EAASC,MACrB,EAAKe,MAAMqB,QAAQC,KAAK,iBAEzBwD,OAAM,SAAAtE,GACLuE,QAAQC,IAAIxE,Q,oBAIlB,WACE,IAAQ8E,EAAoB7E,KAAKJ,MAAzBiF,gBAER,OACE,8BACGA,EACC,sBAAKzF,UAAU,YAAf,UACE,0CACA,iCACE,sBAAKA,UAAU,aAAf,UACE,uBAAOqC,QAAQ,UAAf,qBACA,uBACEC,KAAK,OACLtC,UAAU,eACV8D,GAAG,UACH/D,MAAO0F,EAAgBf,QACvBlC,SAAU5B,KAAKgE,qBAInB,sBAAK5E,UAAU,aAAf,UACE,uBAAOqC,QAAQ,WAAf,sBACA,uBACEC,KAAK,OACLtC,UAAU,eACV8D,GAAG,WACH/D,MAAO0F,EAAgB3G,SACvB0D,SAAU5B,KAAKN,sBAInB,sBAAKN,UAAU,aAAf,UACE,uBAAOqC,QAAQ,WAAf,sBACA,uBACEC,KAAK,WACLtC,UAAU,eACV8D,GAAG,WACH/D,MAAO0F,EAAgB1G,SACvByD,SAAU5B,KAAKL,yBAKrB,wBACEP,UAAU,0BACVoF,QAASxE,KAAK4E,eAFhB,oBAOA,wBACElD,KAAK,SACLtC,UAAU,sBACVoF,QAASxE,KAAK2E,eAHhB,oBAOA,4BAAI3E,KAAKJ,MAAME,aAGjB,gCACE,uBACA,uE,GArK0BmC,aCCjBiD,E,kDACnB,WAAY3F,GAAQ,IAAD,8BACjB,cAAMA,IACD4F,sBAAwB,EAAKA,sBAAsB1F,KAA3B,gBAC7B,EAAK2F,kBAAoB,EAAKA,kBAAkB3F,KAAvB,gBACzB,EAAK4F,YAAc,EAAKA,YAAY5F,KAAjB,gBACnB,EAAK6F,kBAAoB,EAAKA,kBAAkB7F,KAAvB,gBACzB,EAAK8F,mBAAqB,EAAKA,mBAAmB9F,KAAxB,gBAC1B,EAAK+F,cAAgB,EAAKA,cAAc/F,KAAnB,gBAErB,EAAKgG,iBAAmB,GAExB,EAAK7F,MAAQ,CACX8F,UAAW,GACXb,gBAAiB,KACjBc,cAAe,EACfH,cAAe,IAfA,E,qDAmBnB,WACExF,KAAKoF,sB,mCAGP,SAAsBrF,GACpB,IAAMyF,EAAgBzF,EAAEG,OAAOf,MAE/Ba,KAAKC,SAAS,CACZuF,cAAeA,M,+BAInB,WAAqB,IAAD,OAClBpB,EAAoBwB,SACjBtH,MAAK,SAAAC,GACJ,EAAK0B,SAAS,CACZyF,UAAWnH,EAASC,UAGvB6F,OAAM,SAAAtE,GACLuE,QAAQC,IAAIxE,Q,yBAIlB,WACEC,KAAKoF,oBACLpF,KAAKC,SAAS,CACZ4E,gBAAiB,KACjBc,cAAe,M,+BAInB,SAAkBxH,EAAUkF,GAC1BrD,KAAKC,SAAS,CACZ4E,gBAAiB1G,EACjBwH,aAActC,M,gCAIlB,WAAsB,IAAD,OACnBe,EAAoByB,YACjBvH,MAAK,SAAAC,GACJ+F,QAAQC,IAAIhG,EAASC,MACrB,EAAK6G,iBAENhB,OAAM,SAAAtE,GACLuE,QAAQC,IAAIxE,Q,2BAIlB,WAAiB,IAAD,OACdC,KAAKC,SAAS,CACZ4E,gBAAiB,KACjBc,cAAe,IAGjBvB,EAAoB0B,cAAc9F,KAAKJ,MAAM4F,eAC1ClH,MAAK,SAAAC,GACJ,EAAK0B,SAAS,CACZyF,UAAWnH,EAASC,OAEtB8F,QAAQC,IAAIhG,EAASC,SAEtB6F,OAAM,SAAAtE,GACLuE,QAAQC,IAAIxE,Q,oBAIlB,WAAU,IAAD,OACP,EAAoEC,KAAKJ,MAAjE4F,EAAR,EAAQA,cAAeE,EAAvB,EAAuBA,UAAWb,EAAlC,EAAkCA,gBAAiBc,EAAnD,EAAmDA,aAEnD,OACE,sBAAKvG,UAAU,WAAf,UACE,qBAAKA,UAAU,WAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,uBACEsC,KAAK,OACLtC,UAAU,eACV2G,YAAY,oBACZ5G,MAAOqG,EACP5D,SAAU5B,KAAKmF,wBAEjB,qBAAK/F,UAAU,qBAAf,SACE,wBACEA,UAAU,4BACVsC,KAAK,SACL8C,QAASxE,KAAKwF,cAHhB,2BAUN,sBAAKpG,UAAU,WAAf,UACE,gDAEA,oBAAIA,UAAU,aAAd,SACGsG,GACCA,EAAUtC,KAAI,SAACjF,EAAUkF,GAAX,OACZ,oBACEjE,UACE,oBACCiE,IAAUsC,EAAe,SAAW,IAEvCnB,QAAS,kBAAM,EAAKc,kBAAkBnH,EAAUkF,IALlD,SAQGlF,EAAS2F,QAAQrD,OAAS,EAAKgF,iBAAiB,EAAItH,EAAS2F,QAAU3F,EAAS2F,QAAQb,OAAO,EAAE,EAAKwC,iBAAiB,GAAG,OAFtHpC,WAcf,qBAAKjE,UAAU,WAAf,SACGyF,EACC,gCACE,0CACA,gCACE,gCACE,gDACO,IACRA,EAAgBf,WAEnB,gCACE,gCACE,iDACO,IACRe,EAAgB3G,YAEnB,gCACE,gCACE,iDACO,IACR2G,EAAgB1G,YAGnB,cAAC,IAAD,CACE4E,GAAI,cAAgB8B,EAAgB3B,GACpC9D,UAAU,sBAFZ,qBAQF,gCACE,uBACA,0E,GA5K6B6C,a,iBCAtB+D,E,kDACjB,WAAYzG,GAAQ,IAAD,8BACf,cAAMA,IACD0G,aAAe,EAAKA,aAAaxG,KAAlB,gBACpB,EAAKyG,UAAY,EAAKA,UAAUzG,KAAf,gBAEjB,EAAK0G,UAAY,EAAKA,UAAU1G,KAAf,gBACjB,EAAK2G,WAAa,EAAKA,WAAW3G,KAAhB,gBAElB,EAAKG,MAAQ,CACXyG,KAAM,KACNC,UAAU,GAVG,E,6CAcjB,WACItG,KAAKC,SAAS,CACZoG,KAAM,KACNC,UAAU,M,0BAIhB,SAAavG,GACX,IAAMwG,EAAexG,EAAEG,OAAOsG,MAAM,GAGpCxG,KAAKC,SAAS,CACZoG,KAAME,M,uBAIV,WACE,IAAOF,EAAQrG,KAAKJ,MAAbyG,KACPI,IAAKzH,MAAMqH,EAAM,CACfK,SAAU1G,KAAKoG,WACfO,QAAQ,M,wBAIZ,SAAWC,GACTA,EAAQpI,KAAKqI,SAAQ,SAAUC,EAASzD,GACpC,IAAI0D,EAAe,CACfjD,QAASgD,EAAQE,IACjB9I,SAAU4I,EAAQ5I,SAClBC,SAAU2I,EAAQ3I,UAGtBiG,EAAoBb,OAAO3E,KAAKC,UAAUkI,IAAe1C,OAAM,SAAAtE,GAC3DuE,QAAQC,IAAIxE,SAIpBC,KAAKC,SAAS,CACVqG,UAAU,M,oBAKhB,WACM,OAAItG,KAAKJ,MAAM0G,SAUP,gCACI,6DACA,wBAAQlH,UAAU,kBAAkBoF,QAASxE,KAAKmG,UAAlD,uBAVJ,gCACI,uBAAOzE,KAAK,OAAOC,KAAK,OAAOsF,OAAO,aAAarF,SAAU5B,KAAKiG,eAClE,wBAAQzB,QAASxE,KAAKkG,UAAtB,iC,GA/DoBjE,aCiH7BiF,E,kDAnGb,WAAY3H,GAAQ,IAAD,8BACjB,cAAMA,IACD4H,OAAS,EAAKA,OAAO1H,KAAZ,gBAEd,EAAKG,MAAQ,CACXwH,oBAAoB,EACpBC,gBAAgB,EAChBxE,iBAAayE,GAPE,E,qDAWnB,WACE,IAAMhE,EAAO5C,EAAYoC,iBAErBQ,GACFtD,KAAKC,SAAS,CACZ4C,YAAaS,M,oBAKnB,WACE5C,EAAY6G,W,oBAId,WACE,IAAQ1E,EAAgB7C,KAAKJ,MAArBiD,YACR,OACE,gCACE,sBAAKzD,UAAU,2CAAf,UACE,mBAAGoI,KAAK,aAAapI,UAAU,eAA/B,sBAGCyD,EACD,sBAAKzD,UAAU,qBAAf,UACE,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAM2D,GAAI,aAAc3D,UAAU,WAAlC,yBAIF,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAM2D,GAAI,OAAQ3D,UAAU,WAA5B,mBAIF,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAM2D,GAAI,UAAW3D,UAAU,WAA/B,yBAKD,KACJyD,EACG,sBAAKzD,UAAU,qBAAf,UACE,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAM2D,GAAI,WAAY3D,UAAU,WAAhC,SACGyD,EAAY3E,aAGjB,oBAAIkB,UAAU,WAAd,SACE,mBAAGoI,KAAK,SAASpI,UAAU,WAAWoF,QAASxE,KAAKmH,OAApD,yBAMJ,sBAAK/H,UAAU,qBAAf,UACE,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAM2D,GAAI,SAAU3D,UAAU,WAA9B,qBAKF,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAM2D,GAAI,YAAa3D,UAAU,WAAjC,6BAQR,qBAAKA,UAAU,iBAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOqI,OAAK,EAACC,KAAM,CAAC,IAAK,cAAeC,UAAWzC,IACnD,cAAC,IAAD,CAAOuC,OAAK,EAACC,KAAK,OAAOC,UAAW5D,IACpC,cAAC,IAAD,CAAO0D,OAAK,EAACC,KAAK,UAAUC,UAAW3B,IACvC,cAAC,IAAD,CAAO0B,KAAK,iBAAiBC,UAAWlD,IACxC,cAAC,IAAD,CAAOgD,OAAK,EAACC,KAAK,SAASC,UAAWrI,IACtC,cAAC,IAAD,CAAOmI,OAAK,EAACC,KAAK,YAAYC,UAAWtF,IACzC,cAAC,IAAD,CAAOoF,OAAK,EAACC,KAAK,WAAWC,UAAWjF,gB,GA5FlCT,aCLH2F,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBxJ,MAAK,YAAkD,IAA/CyJ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,K","file":"static/js/main.a3d9088b.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:8081/api/auth/\";\r\n\r\nclass AuthService {\r\n  login(username, password) {\r\n    return axios\r\n      .post(API_URL + \"login\", {\r\n        username,\r\n        password\r\n      })\r\n      .then(response => {\r\n        if (response.data.accessToken) {\r\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n        }\r\n\r\n        return response.data;\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"user\");\r\n  }\r\n\r\n  register(username, email, password) {\r\n    return axios.post(API_URL + \"register\", {\r\n      username,\r\n      email,\r\n      password\r\n    });\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem('user'));\r\n  }\r\n}\r\n\r\nexport default new AuthService();","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      loading: false,\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  handleLogin(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      loading: true\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.login(this.state.username, this.state.password).then(\r\n        () => {\r\n          this.props.history.push(\"/passwords\");//goto password list ofter login\r\n          window.location.reload();\r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            loading: false,\r\n            message: resMessage\r\n          });\r\n        }\r\n      );\r\n    } else {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\">\r\n          <img\r\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n            alt=\"profile-img\"\r\n            className=\"profile-img-card\"\r\n          />\r\n\r\n          <Form\r\n            onSubmit={this.handleLogin}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"username\">Username</label>\r\n              <Input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"username\"\r\n                value={this.state.username}\r\n                onChange={this.onChangeUsername}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <Input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                name=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.onChangePassword}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <button\r\n                className=\"btn btn-primary btn-block\"\r\n                disabled={this.state.loading}\r\n              >\r\n                {this.state.loading && (\r\n                  <span className=\"spinner-border spinner-border-sm\"></span>\r\n                )}\r\n                <span>Login</span>\r\n              </button>\r\n            </div>\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst email = value => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This is not a valid email.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vusername = value => {\r\n  if (value.length < 3 || value.length > 20) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The username must be between 3 and 20 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vpassword = value => {\r\n  if (value.length < 6 || value.length > 40) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The password must be between 6 and 40 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      successful: false,\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  handleRegister(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      successful: false\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.register(\r\n        this.state.username,\r\n        this.state.email,\r\n        this.state.password\r\n      ).then(\r\n        response => {\r\n          this.setState({\r\n            message: response.data.message,\r\n            successful: true\r\n          });\r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            successful: false,\r\n            message: resMessage\r\n          });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\">\r\n          <img\r\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n            alt=\"profile-img\"\r\n            className=\"profile-img-card\"\r\n          />\r\n\r\n          <Form\r\n            onSubmit={this.handleRegister}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            {!this.state.successful && (\r\n              <div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"username\">Username</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChangeUsername}\r\n                    validations={[required, vusername]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.onChangeEmail}\r\n                    validations={[required, email]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChangePassword}\r\n                    validations={[required, vpassword]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <button className=\"btn btn-primary btn-block\">Sign Up</button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div\r\n                  className={\r\n                    this.state.successful\r\n                      ? \"alert alert-success\"\r\n                      : \"alert alert-danger\"\r\n                  }\r\n                  role=\"alert\"\r\n                >\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nexport default class Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      redirect: null,\r\n      userReady: false,\r\n      currentUser: { username: \"\" }\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const currentUser = AuthService.getCurrentUser();\r\n\r\n    if (!currentUser) this.setState({ redirect: \"/home\" });\r\n    this.setState({ currentUser: currentUser, userReady: true })\r\n  }\r\n\r\n  render() {\r\n    if (this.state.redirect) {\r\n      return <Redirect to={this.state.redirect} />\r\n    }\r\n\r\n    const { currentUser } = this.state;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        {(this.state.userReady) ?\r\n        <div>\r\n        <header className=\"jumbotron\">\r\n          <h3>\r\n            <strong>{currentUser.username}</strong> Profile\r\n          </h3>\r\n        </header>\r\n        <p>\r\n          <strong>Token:</strong>{\" \"}\r\n          {currentUser.accessToken.substring(0, 20)} ...{\" \"}\r\n          {currentUser.accessToken.substr(currentUser.accessToken.length - 20)}\r\n        </p>\r\n        <p>\r\n          <strong>Id:</strong>{\" \"}\r\n          {currentUser.id}\r\n        </p>\r\n        <p>\r\n          <strong>Email:</strong>{\" \"}\r\n          {currentUser.email}\r\n        </p>\r\n        <strong>Authorities:</strong>\r\n        <ul>\r\n          {currentUser.roles &&\r\n            currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\r\n        </ul>\r\n      </div>: null}\r\n      </div>\r\n    );\r\n  }\r\n}","import axios from \"axios\";\r\nimport AuthService from \"./services/auth.service\";\r\n\r\nconst user = AuthService.getCurrentUser();\r\n//Change baseURL depending on REST API url on the server configuration\r\n\r\nexport default axios.create(\r\n  {\r\n  baseURL: \"http://localhost:8081/api\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\",\r\n    \"x-access-token\": user?.accessToken,\r\n    \"username\": user?.username\r\n  }\r\n});","import http from \"../http-common\";\r\n\r\nclass PasswordDataService {\r\n  getAll() {\r\n    return http.get(\"/passwords\");\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/passwords/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/passwords\", data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/passwords/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/passwords/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(`/passwords`);\r\n  }\r\n\r\n  findByWebsite(website) {\r\n    return http.get(`/passwords?website=${website}`);\r\n  }\r\n\r\n  findByUsername(username) {\r\n    return http.get(`/passwords?username=${username}`);\r\n  }\r\n}\r\n\r\nexport default new PasswordDataService();","import React, { Component } from \"react\";\r\nimport PasswordDataService from \"../services/password.service\";\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nexport default class AddPassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeWebsite = this.onChangeWebsite.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.savePassword = this.savePassword.bind(this);\r\n    this.newPassword = this.newPassword.bind(this);\r\n\r\n    this.state = {\r\n      id: null,\r\n      website: \"\",\r\n      username: \"\",\r\n      password: \"\",\r\n      submitted: false\r\n    };\r\n  }\r\n\r\n  onChangeWebsite(e) {\r\n    this.setState({\r\n      website: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  savePassword() {\r\n    var data = {\r\n      website: this.state.website,\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    };\r\n\r\n    PasswordDataService.create(JSON.stringify(data)).then(\r\n      this.setState({\r\n        submitted: true\r\n      })).catch(e => {\r\n      console.log(e);\r\n    });\r\n    \r\n  }\r\n\r\n  newPassword() {\r\n    this.setState({\r\n      id: null,\r\n      website: \"\",\r\n      username: \"\",\r\n      password: \"\",\r\n\r\n      submitted: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"submit-form\">\r\n        {this.state.submitted ? (\r\n          <div>\r\n            <h4>You submitted successfully!</h4>\r\n            <button className=\"btn btn-success\" onClick={this.newPassword}>\r\n              Add\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"website\">website</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"website\"\r\n                required\r\n                value={this.state.website}\r\n                onChange={this.onChangeWebsite}\r\n                name=\"website\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"username\">username</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"username\"\r\n                required\r\n                value={this.state.username}\r\n                onChange={this.onChangeUsername}\r\n                name=\"username\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">password</label>\r\n              <input\r\n                type=\"text\"//change to text to view password\r\n                className=\"form-control\"\r\n                id=\"password\"\r\n                required\r\n                value={this.state.password}\r\n                onChange={this.onChangePassword}\r\n                name=\"password\"\r\n              />\r\n            </div>\r\n\r\n            <button onClick={this.savePassword} className=\"btn btn-success\">\r\n                Submit\r\n              </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport PasswordDataService from \"../services/password.service\";\r\n\r\nexport default class Password extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeWebsite = this.onChangeWebsite.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.getPassword = this.getPassword.bind(this);\r\n\r\n    this.updatePassword = this.updatePassword.bind(this);\r\n    this.deletePassword = this.deletePassword.bind(this);\r\n\r\n    this.state = {\r\n      currentPassword: {\r\n        id: null,\r\n        website: \"\",\r\n        username: \"\",\r\n        password: \"\"\r\n      },\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getPassword(this.props.match.params.id);\r\n  }\r\n\r\n  onChangeWebsite(e) {\r\n    const website = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentPassword: {\r\n          ...prevState.currentPassword,\r\n          website: website\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    const username = e.target.value;\r\n    \r\n    this.setState(prevState => ({\r\n      currentPassword: {\r\n        ...prevState.currentPassword,\r\n        username: username\r\n      }\r\n    }));\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    const password = e.target.value;\r\n    \r\n    this.setState(prevState => ({\r\n      currentPassword: {\r\n        ...prevState.currentPassword,\r\n        password: password\r\n      }\r\n    }));\r\n  }\r\n\r\n\r\n  getPassword(id) {\r\n    PasswordDataService.get(id)\r\n      .then(response => {\r\n        this.setState({\r\n          currentPassword: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  updatePassword() {\r\n    PasswordDataService.update(\r\n      this.state.currentPassword.id,\r\n      this.state.currentPassword\r\n    )\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.setState({\r\n          message: \"The password was updated successfully!\"\r\n        });\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  deletePassword() {    \r\n    PasswordDataService.delete(this.state.currentPassword.id)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.props.history.push('/passwords')\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { currentPassword } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        {currentPassword ? (\r\n          <div className=\"edit-form\">\r\n            <h4>Password</h4>\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"website\">website</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"website\"\r\n                  value={currentPassword.website}\r\n                  onChange={this.onChangeWebsite}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"username\">username</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"username\"\r\n                  value={currentPassword.username}\r\n                  onChange={this.onChangeUsername}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"password\">password</label>\r\n                <input\r\n                  type=\"password\"//change to text to view password\r\n                  className=\"form-control\"\r\n                  id=\"password\"\r\n                  value={currentPassword.password}\r\n                  onChange={this.onChangePassword}\r\n                />\r\n              </div>\r\n            </form>\r\n\r\n            <button\r\n              className=\"badge badge-danger mr-2\"\r\n              onClick={this.deletePassword}\r\n            >\r\n              Delete\r\n            </button>\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"badge badge-success\"\r\n              onClick={this.updatePassword}\r\n            >\r\n              Update\r\n            </button>\r\n            <p>{this.state.message}</p>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <br />\r\n            <p>Please click on a Password...</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport PasswordDataService from \"../services/password.service\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class PasswordsList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeSearchWebsite = this.onChangeSearchWebsite.bind(this);\r\n    this.retrievePasswords = this.retrievePasswords.bind(this);\r\n    this.refreshList = this.refreshList.bind(this);\r\n    this.setActivePassword = this.setActivePassword.bind(this);\r\n    this.removeAllPasswords = this.removeAllPasswords.bind(this);\r\n    this.searchWebsite = this.searchWebsite.bind(this);\r\n\r\n    this.theMeaningOfLive = 42;\r\n\r\n    this.state = {\r\n      passwords: [],\r\n      currentPassword: null,\r\n      currentIndex: -1,\r\n      searchWebsite: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.retrievePasswords();\r\n  }\r\n\r\n  onChangeSearchWebsite(e) {\r\n    const searchWebsite = e.target.value;\r\n\r\n    this.setState({\r\n      searchWebsite: searchWebsite\r\n    });\r\n  }\r\n\r\n  retrievePasswords() {\r\n    PasswordDataService.getAll()\r\n      .then(response => {\r\n        this.setState({\r\n          passwords: response.data\r\n        });\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  refreshList() {\r\n    this.retrievePasswords();\r\n    this.setState({\r\n      currentPassword: null,\r\n      currentIndex: -1\r\n    });\r\n  }\r\n\r\n  setActivePassword(password, index) {\r\n    this.setState({\r\n      currentPassword: password,\r\n      currentIndex: index\r\n    });\r\n  }\r\n\r\n  removeAllPasswords() {\r\n    PasswordDataService.deleteAll()\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.refreshList();\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  searchWebsite() {\r\n    this.setState({\r\n      currentPassword: null,\r\n      currentIndex: -1\r\n    });\r\n\r\n    PasswordDataService.findByWebsite(this.state.searchWebsite)\r\n      .then(response => {\r\n        this.setState({\r\n          passwords: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { searchWebsite, passwords, currentPassword, currentIndex } = this.state;\r\n\r\n    return (\r\n      <div className=\"list row\">\r\n        <div className=\"col-md-8\">\r\n          <div className=\"input-group mb-3\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Search by website\"\r\n              value={searchWebsite}\r\n              onChange={this.onChangeSearchWebsite}\r\n            />\r\n            <div className=\"input-group-append\">\r\n              <button\r\n                className=\"btn btn-outline-secondary\"\r\n                type=\"button\"\r\n                onClick={this.searchWebsite}\r\n              >\r\n                Search\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <h4>Passwords List</h4>\r\n\r\n          <ul className=\"list-group\">\r\n            {passwords &&\r\n              passwords.map((password, index) => (\r\n                <li\r\n                  className={\r\n                    \"list-group-item \" +\r\n                    (index === currentIndex ? \"active\" : \"\")\r\n                  }\r\n                  onClick={() => this.setActivePassword(password, index)}\r\n                  key={index}\r\n                >\r\n                  {password.website.length < this.theMeaningOfLive-5 ? password.website : password.website.substr(0,this.theMeaningOfLive-5)+\"...\"}\r\n                </li>\r\n              ))}\r\n          </ul>\r\n\r\n          {/* <button\r\n            className=\"m-3 btn btn-sm btn-danger\"\r\n            onClick={this.removeAllPasswords}\r\n          >\r\n            Remove All\r\n          </button> */}\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          {currentPassword ? (\r\n            <div>\r\n              <h4>Password</h4>\r\n              <div>\r\n                <label>\r\n                  <strong>Website:</strong>\r\n                </label>{\" \"}\r\n                {currentPassword.website}\r\n              </div>\r\n              <div>\r\n                <label>\r\n                  <strong>Username:</strong>\r\n                </label>{\" \"}\r\n                {currentPassword.username}\r\n              </div>\r\n              <div>\r\n                <label>\r\n                  <strong>Password:</strong>\r\n                </label>{\" \"}\r\n                {currentPassword.password}\r\n              </div>\r\n\r\n              <Link\r\n                to={\"/passwords/\" + currentPassword.id}\r\n                className=\"badge badge-warning\"\r\n              >\r\n                Edit\r\n              </Link>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <br />\r\n              <p>Please click on a Password...</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport PasswordDataService from \"../services/password.service\";\r\nimport Papa from \"papaparse\";\r\n\r\nexport default class UploadPassword extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onChangeFile = this.onChangeFile.bind(this);\r\n        this.importCSV = this.importCSV.bind(this);\r\n\r\n        this.newUpload = this.newUpload.bind(this);\r\n        this.updateData = this.updateData.bind(this);\r\n    \r\n        this.state = {\r\n          file: null,\r\n          uploaded: false\r\n        };\r\n      }\r\n\r\n      newUpload(){\r\n          this.setState({\r\n            file: null,\r\n            uploaded: false\r\n          });\r\n      }\r\n\r\n      onChangeFile(e) {\r\n        const fileToUpload = e.target.files[0];\r\n        \r\n    \r\n        this.setState({\r\n          file: fileToUpload\r\n        });\r\n      }\r\n    \r\n      importCSV(){\r\n        const {file} = this.state;\r\n        Papa.parse(file, {\r\n          complete: this.updateData,\r\n          header: true\r\n        });\r\n      }\r\n\r\n      updateData(results){\r\n        results.data.forEach(function (element, index) {\r\n            var tempPassword = {\r\n                website: element.url,\r\n                username: element.username,\r\n                password: element.password\r\n            };\r\n\r\n            PasswordDataService.create(JSON.stringify(tempPassword)).catch(e => {\r\n                console.log(e);\r\n              });\r\n        });\r\n\r\n        this.setState({\r\n            uploaded: true\r\n        });\r\n      }\r\n\r\n\r\n      render() {\r\n            if(!this.state.uploaded){\r\n                return(\r\n                    <div>\r\n                        <input type=\"file\" name=\"file\" accept=\".csv,.json\" onChange={this.onChangeFile}/>\r\n                        <button onClick={this.importCSV}> Upload now!</button>\r\n                    </div>\r\n                );\r\n            }\r\n            else{\r\n                return(\r\n                    <div>\r\n                        <h4>You submitted successfully!</h4>\r\n                        <button className=\"btn btn-success\" onClick={this.newUpload}>\r\n                        Upload\r\n                        </button>\r\n                    </div>\r\n                );\r\n            }\r\n    }\r\n\r\n}","import React, { Component } from \"react\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\n\r\n\r\nimport AuthService from \"./services/auth.service\";\r\n\r\nimport Login from \"./components/login.component\";\r\nimport Register from \"./components/register.component\";\r\nimport Profile from \"./components/profile.component\";\r\n\r\nimport AddPassword from \"./components/add-password.component\";\r\nimport Password from \"./components/password.component\";\r\nimport PasswordsList from \"./components/passwords-list.component\";\r\nimport UploadPassword from \"./components/upload-password.component\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.logOut = this.logOut.bind(this);\r\n\r\n    this.state = {\r\n      showModeratorBoard: false,\r\n      showAdminBoard: false,\r\n      currentUser: undefined,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user = AuthService.getCurrentUser();\r\n\r\n    if (user) {\r\n      this.setState({\r\n        currentUser: user\r\n      });\r\n    }\r\n  }\r\n\r\n  logOut() {\r\n    AuthService.logout();\r\n  }\r\n\r\n\r\n  render() {\r\n    const { currentUser } = this.state;\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n          <a href=\"/passwords\" className=\"navbar-brand\">\r\n            Penguins\r\n          </a>\r\n          {currentUser ? (\r\n          <div className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/passwords\"} className=\"nav-link\">\r\n                Passwords\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/add\"} className=\"nav-link\">\r\n                Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/upload\"} className=\"nav-link\">\r\n                Upload\r\n              </Link>\r\n            </li>\r\n          </div>\r\n          ):(null)}\r\n        {currentUser ? (\r\n            <div className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/profile\"} className=\"nav-link\">\r\n                  {currentUser.username}\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a href=\"/login\" className=\"nav-link\" onClick={this.logOut}>\r\n                  LogOut\r\n                </a>\r\n              </li>\r\n            </div>\r\n          ) : (\r\n            <div className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/login\"} className=\"nav-link\">\r\n                  Login\r\n                </Link>\r\n              </li>\r\n\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/register\"} className=\"nav-link\">\r\n                  Sign Up\r\n                </Link>\r\n              </li>\r\n            </div>\r\n          )}\r\n        </nav>\r\n\r\n        <div className=\"container mt-3\">\r\n          <Switch>\r\n            <Route exact path={[\"/\", \"/passwords\"]} component={PasswordsList} />\r\n            <Route exact path=\"/add\" component={AddPassword} />\r\n            <Route exact path=\"/upload\" component={UploadPassword} />\r\n            <Route path=\"/passwords/:id\" component={Password} />\r\n            <Route exact path=\"/login\" component={Login} />\r\n            <Route exact path=\"/register\" component={Register} />\r\n            <Route exact path=\"/profile\" component={Profile} />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\n\n//import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}