{"version":3,"sources":["http-common.js","services/password.service.js","components/add-password.component.js","components/password.component.js","components/passwords-list.component.js","App.js","reportWebVitals.js","index.js"],"names":["axios","create","baseURL","headers","http","get","id","data","post","put","delete","website","username","AddPassword","props","onChangeWebsite","bind","onChangeUsername","onChangePassword","savePassword","newPassword","state","password","submitted","e","this","setState","target","value","PasswordDataService","JSON","stringify","catch","console","log","className","onClick","htmlFor","type","required","onChange","name","Component","Password","getPassword","updatePassword","deletePassword","currentPassword","message","match","params","prevState","then","response","update","history","push","PasswordsList","onChangeSearchWebsite","retrievePasswords","refreshList","setActivePassword","removeAllPasswords","searchWebsite","passwords","currentIndex","getAll","index","deleteAll","findByWebsite","placeholder","map","to","App","href","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.56a74ce5.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n//Change baseURL depending on REST API url on the server configuration\r\nexport default axios.create({\r\n  baseURL: \"http://localhost:8081/api\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\"\r\n  }\r\n});","import http from \"../http-common\";\r\n\r\nclass PasswordDataService {\r\n  getAll() {\r\n    return http.get(\"/passwords\");\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/passwords/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/passwords\", data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/passwords/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/passwords/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(`/passwords`);\r\n  }\r\n\r\n  findByWebsite(website) {\r\n    return http.get(`/passwords?website=${website}`);\r\n  }\r\n\r\n  findByUsername(username) {\r\n    return http.get(`/passwords?username=${username}`);\r\n  }\r\n}\r\n\r\nexport default new PasswordDataService();","import React, { Component } from \"react\";\r\nimport PasswordDataService from \"../services/password.service\";\r\n\r\nexport default class AddPassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeWebsite = this.onChangeWebsite.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.savePassword = this.savePassword.bind(this);\r\n    this.newPassword = this.newPassword.bind(this);\r\n\r\n    this.state = {\r\n      id: null,\r\n      website: \"\",\r\n      username: \"\",\r\n      password: \"\",\r\n      submitted: false\r\n    };\r\n  }\r\n\r\n  onChangeWebsite(e) {\r\n    this.setState({\r\n      website: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  savePassword() {\r\n    var data = {\r\n      website: this.state.website,\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    };\r\n\r\n    PasswordDataService.create(JSON.stringify(data)).catch(e => {\r\n      console.log(e);\r\n    });\r\n      // .then(response => {\r\n      //   this.setState({\r\n      //     id: response.data.id,\r\n      //     website: response.data.website,\r\n      //     username: response.data.username,\r\n      //     password: response.data.password,\r\n\r\n      //     submitted: true\r\n      //   });\r\n      //console.log(response.data);\r\n      //})\r\n      \r\n  }\r\n\r\n  newPassword() {\r\n    this.setState({\r\n      id: null,\r\n      website: \"\",\r\n      username: \"\",\r\n      password: \"\",\r\n\r\n      submitted: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"submit-form\">\r\n        {this.state.submitted ? (\r\n          <div>\r\n            <h4>You submitted successfully!</h4>\r\n            <button className=\"btn btn-success\" onClick={this.newPassword}>\r\n              Add\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"website\">website</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"website\"\r\n                required\r\n                value={this.state.website}\r\n                onChange={this.onChangeWebsite}\r\n                name=\"website\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"username\">username</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"username\"\r\n                required\r\n                value={this.state.username}\r\n                onChange={this.onChangeUsername}\r\n                name=\"username\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">password</label>\r\n              <input\r\n                type=\"text\"//change to text to view password\r\n                className=\"form-control\"\r\n                id=\"password\"\r\n                required\r\n                value={this.state.password}\r\n                onChange={this.onChangePassword}\r\n                name=\"password\"\r\n              />\r\n            </div>\r\n\r\n            <button onClick={this.savePassword} className=\"btn btn-success\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport PasswordDataService from \"../services/password.service\";\r\n\r\nexport default class Password extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeWebsite = this.onChangeWebsite.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.getPassword = this.getPassword.bind(this);\r\n\r\n    this.updatePassword = this.updatePassword.bind(this);\r\n    this.deletePassword = this.deletePassword.bind(this);\r\n\r\n    this.state = {\r\n      currentPassword: {\r\n        id: null,\r\n        website: \"\",\r\n        username: \"\",\r\n        password: \"\"\r\n      },\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getPassword(this.props.match.params.id);\r\n  }\r\n\r\n  onChangeWebsite(e) {\r\n    const website = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentPassword: {\r\n          ...prevState.currentPassword,\r\n          website: website\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    const username = e.target.value;\r\n    \r\n    this.setState(prevState => ({\r\n      currentPassword: {\r\n        ...prevState.currentPassword,\r\n        username: username\r\n      }\r\n    }));\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    const password = e.target.value;\r\n    \r\n    this.setState(prevState => ({\r\n      currentPassword: {\r\n        ...prevState.currentPassword,\r\n        password: password\r\n      }\r\n    }));\r\n  }\r\n\r\n\r\n  getPassword(id) {\r\n    PasswordDataService.get(id)\r\n      .then(response => {\r\n        this.setState({\r\n          currentPassword: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  updatePassword() {\r\n    PasswordDataService.update(\r\n      this.state.currentPassword.id,\r\n      this.state.currentPassword\r\n    )\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.setState({\r\n          message: \"The password was updated successfully!\"\r\n        });\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  deletePassword() {    \r\n    PasswordDataService.delete(this.state.currentPassword.id)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.props.history.push('/passwords')\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { currentPassword } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        {currentPassword ? (\r\n          <div className=\"edit-form\">\r\n            <h4>Password</h4>\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"website\">website</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"website\"\r\n                  value={currentPassword.website}\r\n                  onChange={this.onChangeWebsite}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"username\">username</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"username\"\r\n                  value={currentPassword.username}\r\n                  onChange={this.onChangeUsername}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"password\">password</label>\r\n                <input\r\n                  type=\"password\"//change to text to view password\r\n                  className=\"form-control\"\r\n                  id=\"password\"\r\n                  value={currentPassword.password}\r\n                  onChange={this.onChangePassword}\r\n                />\r\n              </div>\r\n            </form>\r\n\r\n            <button\r\n              className=\"badge badge-danger mr-2\"\r\n              onClick={this.deletePassword}\r\n            >\r\n              Delete\r\n            </button>\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"badge badge-success\"\r\n              onClick={this.updatePassword}\r\n            >\r\n              Update\r\n            </button>\r\n            <p>{this.state.message}</p>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <br />\r\n            <p>Please click on a Password...</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport PasswordDataService from \"../services/password.service\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class PasswordsList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeSearchWebsite = this.onChangeSearchWebsite.bind(this);\r\n    this.retrievePasswords = this.retrievePasswords.bind(this);\r\n    this.refreshList = this.refreshList.bind(this);\r\n    this.setActivePassword = this.setActivePassword.bind(this);\r\n    this.removeAllPasswords = this.removeAllPasswords.bind(this);\r\n    this.searchWebsite = this.searchWebsite.bind(this);\r\n\r\n    this.state = {\r\n      passwords: [],\r\n      currentPassword: null,\r\n      currentIndex: -1,\r\n      searchWebsite: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.retrievePasswords();\r\n  }\r\n\r\n  onChangeSearchWebsite(e) {\r\n    const searchWebsite = e.target.value;\r\n\r\n    this.setState({\r\n      searchWebsite: searchWebsite\r\n    });\r\n  }\r\n\r\n  retrievePasswords() {\r\n    PasswordDataService.getAll()\r\n      .then(response => {\r\n        this.setState({\r\n          passwords: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  refreshList() {\r\n    this.retrievePasswords();\r\n    this.setState({\r\n      currentPassword: null,\r\n      currentIndex: -1\r\n    });\r\n  }\r\n\r\n  setActivePassword(password, index) {\r\n    this.setState({\r\n      currentPassword: password,\r\n      currentIndex: index\r\n    });\r\n  }\r\n\r\n  removeAllPasswords() {\r\n    PasswordDataService.deleteAll()\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.refreshList();\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  searchWebsite() {\r\n    this.setState({\r\n      currentPassword: null,\r\n      currentIndex: -1\r\n    });\r\n\r\n    PasswordDataService.findByWebsite(this.state.searchWebsite)\r\n      .then(response => {\r\n        this.setState({\r\n          passwords: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { searchWebsite, passwords, currentPassword, currentIndex } = this.state;\r\n\r\n    return (\r\n      <div className=\"list row\">\r\n        <div className=\"col-md-8\">\r\n          <div className=\"input-group mb-3\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Search by website\"\r\n              value={searchWebsite}\r\n              onChange={this.onChangeSearchWebsite}\r\n            />\r\n            <div className=\"input-group-append\">\r\n              <button\r\n                className=\"btn btn-outline-secondary\"\r\n                type=\"button\"\r\n                onClick={this.searchWebsite}\r\n              >\r\n                Search\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <h4>Passwords List</h4>\r\n\r\n          <ul className=\"list-group\">\r\n            {passwords &&\r\n              passwords.map((password, index) => (\r\n                <li\r\n                  className={\r\n                    \"list-group-item \" +\r\n                    (index === currentIndex ? \"active\" : \"\")\r\n                  }\r\n                  onClick={() => this.setActivePassword(password, index)}\r\n                  key={index}\r\n                >\r\n                  {password.website}\r\n                </li>\r\n              ))}\r\n          </ul>\r\n\r\n          <button\r\n            className=\"m-3 btn btn-sm btn-danger\"\r\n            onClick={this.removeAllPasswords}\r\n          >\r\n            Remove All\r\n          </button>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          {currentPassword ? (\r\n            <div>\r\n              <h4>Password</h4>\r\n              <div>\r\n                <label>\r\n                  <strong>Website:</strong>\r\n                </label>{\" \"}\r\n                {currentPassword.website}\r\n              </div>\r\n              <div>\r\n                <label>\r\n                  <strong>Username:</strong>\r\n                </label>{\" \"}\r\n                {currentPassword.username}\r\n              </div>\r\n              <div>\r\n                <label>\r\n                  <strong>Password:</strong>\r\n                </label>{\" \"}\r\n                {currentPassword.password}\r\n              </div>\r\n\r\n              <Link\r\n                to={\"/passwords/\" + currentPassword.id}\r\n                className=\"badge badge-warning\"\r\n              >\r\n                Edit\r\n              </Link>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <br />\r\n              <p>Please click on a Password...</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport AddPassword from \"./components/add-password.component\";\nimport Password from \"./components/password.component\";\nimport PasswordsList from \"./components/passwords-list.component\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n          <a href=\"/passwords\" className=\"navbar-brand\">\n            Penguins\n          </a>\n          <div className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/passwords\"} className=\"nav-link\">\n                Passwords\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to={\"/add\"} className=\"nav-link\">\n                Add\n              </Link>\n            </li>\n          </div>\n        </nav>\n\n        <div className=\"container mt-3\">\n          <Switch>\n            <Route exact path={[\"/\", \"/passwords\"]} component={PasswordsList} />\n            <Route exact path=\"/add\" component={AddPassword} />\n            <Route path=\"/passwords/:id\" component={Password} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\n\n//import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}